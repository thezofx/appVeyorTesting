version: 0.1-beta_{build}
pull_requests:
  do_not_increment_build_number: true
branches:
  only:
  - master

max_jobs: 3

environment:
  APPVEYOR_PVR_TAG: '0.1-beta'
  ANDROID_HOME: "C:\\android-sdk-windows"
  ANDROID_NDK_HOME: "C:\\android-sdk-windows\ndk"
  GITHUB_USERNAME: "thezofx"
  APPVEYOR_GITHUB_TOKEN:
    secure: CyJDavtuRiRAUplYAlrX02y/OPTJtxSxcX8J6owjhAtkVL1Ssgtmr9IINqlIm+Fe

  APPVEYOR_API_TOKEN:
    secure: lSkVngPKGAlOGIR7Kvh7D4PQLdZvP3ovjAIe2J/KTsA=

  Key:
    secure: D/mbs92JP2P8+p0qLbdpNg==

  Store:
    secure: 0priMNZ6eNtpNG48zBObfQ==

  matrix:

  - job_name: WinDriver x86
    appveyor_build_worker_image: Visual Studio 2017
    configuration: Release
    platform: x86
    job_group: Build

  - job_name: WinDriver x64
    appveyor_build_worker_image: Visual Studio 2017
    configuration: Release
    platform: x64
    job_group: Build

  - job_name: Android Gradle
    job_group: Build

  - job_name: Deploy
    job_depends_on: Build

for:

  -
    matrix:
      only:
        - job_name: WinDriver x86

    artifacts:
    - path: code\windows\PhoneVR\Release\Win32\driver_PVRServer.dll
      name: driverPhonevr-x86
      type: file

  -
    matrix:
      only:
        - job_name: WinDriver x64

    artifacts:
    - path: code\windows\PhoneVR\Release\x64\driver_PVRServer.dll
      name: driverPhonevr-x64
      type: file

  -
    matrix:
      only:
        - job_name: Android Gradle

    install: 
    - cmd: >-
        set PATH=C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin;C:\Program Files\Git\cmd;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\PowerShell\7\;C:\Program Files\7-Zip;C:\Program Files\Microsoft\Web Platform Installer\;C:\Tools\NuGet;C:\Tools\PsTools;C:\Program Files\Git\usr\bin;C:\Program Files\Git LFS;C:\Program Files\Mercurial\;C:\Program Files (x86)\Subversion\bin;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\SQLDB\DAC\150;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin;C:\Tools\xUnit;C:\Tools\xUnit20;C:\Tools\NUnit\bin;C:\Tools\NUnit3;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\TestPlatform;C:\Ruby193\bin;C:\Tools\WebDriver;C:\Python27;C:\Python27\Scripts;C:\Program Files (x86)\nodejs\;C:\Program Files\nodejs;C:\Program Files (x86)\iojs;C:\Program Files\iojs;C:\Users\appveyor\AppData\Roaming\npm;C:\Program Files (x86)\Yarn\bin\;C:\go\bin;C:\Program Files\erl10.7\bin;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Amazon\AWSCLI\;C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\bin;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files (x86)\Microsoft DirectX SDK;C:\Program Files\Microsoft Service Fabric\bin\Fabric\Fabric.Code;C:\Program Files\Microsoft SDKs\Service Fabric\Tools\ServiceFabricLocalClusterManager;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\CMake\bin;C:\ProgramData\chocolatey\bin;C:\Program Files\LLVM\bin;C:\Tools\vcpkg;C:\Tools\Coverity\bin;C:\Program Files (x86)\NSIS;C:\Tools\Octopus;C:\Program Files\Meson\;C:\Program Files (x86)\Apache\Maven\bin;C:\Tools\GitVersion;C:\Users\appveyor\AppData\Local\Microsoft\WindowsApps;C:\Users\appveyor\.dotnet\tools;C:\Users\appveyor\AppData\Roaming\npm;C:\Users\appveyor\AppData\Local\Yarn\bin;C:\Program Files\AppVeyor\BuildAgent\;C:\Program Files\Java\jdk14\bin;c:\android-sdk-windows\cmdline-tools\tools\bin
        
        appveyor DownloadFile https://dl.google.com/android/repository/commandlinetools-win-6609375_latest.zip
        
        7z x commandlinetools-win-6609375_latest.zip -oC:\android-sdk-windows\cmdline-tools > null
        
        del /f commandlinetools-win-6609375_latest.zip
        
        cd C:\android-sdk-windows\cmdline-tools
        
        yes | sdkmanager --update
        
        yes | sdkmanager --install "ndk;21.3.6528147" > null
        
        yes | sdkmanager --licenses > null
        
        cd %APPVEYOR_BUILD_FOLDER%

    build_script:
    - ps : >-
        cd code\mobile\android\PhoneVR
        
        IF ($env:APPVEYOR_PULL_REQUEST_NUMBER){
            .\gradlew.bat assembleDebug
        } else {
            .\gradlew.bat assemble
        }
        
        7z a PhonevrApk.zip $env:APPVEYOR_BUILD_FOLDER\code\mobile\android\PhoneVR\app\build\outputs\apk\**\**\*.apk

        appveyor PushArtifact PhonevrApk.zip
        
        cd "%APPVEYOR_BUILD_FOLDER%"
        
  -
    matrix:
      only:
        - job_name: Deploy

    build_script:
    - cmd : echo "Waiting for others jobs to finish"

    after_build:
    - ps: >-
        mkdir artifact\android\
        
        mkdir artifact\windriver\win32
        
        mkdir artifact\windriver\win64
        
        copy-item 'driver' -Recurse -Destination 'artifact'
        
        $apiUrl = 'https://ci.appveyor.com/api'

        $token = $env:APPVEYOR_API_TOKEN

        $headers = @{ "Authorization" = "Bearer $token"; "Content-type" = "application/json" }
        
        $accountName = $env:GITHUB_USERNAME
        
        $projectSlug = $env:APPVEYOR_PROJECT_SLUG

        $project = Invoke-RestMethod -Method Get -Uri "$apiUrl/projects/$accountName/$projectSlug" -Headers $headers

        $jobWin86Id = $project.build.jobs[0].jobId

        $jobWin64Id = $project.build.jobs[1].jobId

        $jobAndroidId = $project.build.jobs[2].jobId

        if( $project.build.jobs[0].artifactsCount -gt 0 )
        {
            $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobWin86Id/artifacts" -Headers $headers

            $artifactFileName = $artifacts[0].fileName

            Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobWin86Id/artifacts/$artifactFileName" -OutFile artifact\windriver\win32\driver_PVRServer.dll -Headers @{ "Authorization" = "Bearer $token" }
            
            copy-item 'artifact\windriver\win32\driver_PVRServer.dll' -Recurse -Destination 'artifact\driver\bin\PVRServer\bin\win32'
        }
        
        if( $project.build.jobs[1].artifactsCount -gt 0 )
        {
            $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobWin64Id/artifacts" -Headers $headers

            $artifactFileName = $artifacts[0].fileName

            Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobWin64Id/artifacts/$artifactFileName" -OutFile artifact\windriver\win64\driver_PVRServer.dll -Headers @{ "Authorization" = "Bearer $token" }
            
            copy-item 'artifact\windriver\win64\driver_PVRServer.dll' -Recurse -Destination 'artifact\driver\bin\PVRServer\bin\win64'
        }

        if( $project.build.jobs[2].artifactsCount -gt 0 )
        {
            $artifacts = Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobAndroidId/artifacts" -Headers $headers

            $artifactFileName = $artifacts[0].fileName

            Invoke-RestMethod -Method Get -Uri "$apiUrl/buildjobs/$jobAndroidId/artifacts/$artifactFileName" -OutFile PhonevrApk.zip -Headers @{ "Authorization" = "Bearer $token" }
            
            7z x PhonevrApk.zip -Oartifact\android
        }

    artifacts:
      path: artifact
      name: PhoneVR-$(APPVEYOR_PVR_TAG)_$(APPVEYOR_BUILD_NUMBER)-$(APPVEYOR_REPO_BRANCH)
      type: WebDeployPackage

    before_deploy:
    - ps: >-    
          $token = "token " + $env:APPVEYOR_GITHUB_TOKEN
          
          $releaseUrl = "https://api.github.com/repos/$env:GITHUB_USERNAME/$env:APPVEYOR_PROJECT_NAME/releases"
          
          $releaseLatestUrl = "https://api.github.com/repos/$env:GITHUB_USERNAME/$env:APPVEYOR_PROJECT_NAME/releases/latest"
          
          $releasebyTag =  $releaseUrl+"/tags/"+$env:APPVEYOR_PVR_TAG
          
          $Releases = curl -H @{"Authorization" = $token} -Method GET $releaseUrl | ConvertFrom-Json
          
          if($Releases)
          {
              foreach( $tagName in $Releases.tag_name )
              {
                  if( $tagName -eq $env:APPVEYOR_PVR_TAG )
                  {
                      $TaggedRelease = curl -H @{"Authorization" = $token} -Method GET $releasebyTag | ConvertFrom-Json
                      if($TaggedRelease.assets.length -gt 0)
                      {
                          $deleteUrl = $releaseUrl+"/"+$TaggedRelease.id
                          curl -H @{"Authorization" = $token} -Method DELETE $deleteUrl | ConvertFrom-Json
                      }
                  }
              }
          }

    deploy:
    - provider: GitHub
      tag: $(APPVEYOR_PVR_TAG)
      release: PhoneVR-$(APPVEYOR_PVR_TAG)_$(APPVEYOR_BUILD_NUMBER)
      description: AppVeyor build\nBranch - $(APPVEYOR_REPO_BRANCH)\nOn Commit - $(APPVEYOR_REPO_COMMIT)\nDate - $(APPVEYOR_REPO_COMMIT_TIMESTAMP)
      auth_token: $(APPVEYOR_GITHUB_TOKEN)
      artifact: PhoneVR-$(APPVEYOR_PVR_TAG)_$(APPVEYOR_BUILD_NUMBER)-$(APPVEYOR_REPO_BRANCH)
      force_update: true
      on:
        branch: master
